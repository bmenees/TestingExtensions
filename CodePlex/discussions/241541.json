[
  {
    "Id": "548399",
    "ThreadId": "241541",
    "Html": "\r\n<p>I have modified the code to remove stack traces lines from&nbsp;SoftwareApproach.TestingExtensions. What do you think?</p>\r\n<p></p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre>        <span style=\"color:blue\">internal</span> <span style=\"color:blue\">static</span> <span style=\"color:blue\">void</span> HandleFail(<span style=\"color:blue\">string</span> assertionName, <span style=\"color:blue\">string</span> message, <span style=\"color:blue\">params</span> <span style=\"color:blue\">object</span>[] parameters)\r\n        {\r\n            <span style=\"color:blue\">var</span> exp = <span style=\"color:blue\">new</span> AssertFailedMinialStackTraceException(<span style=\"color:blue\">string</span>.Format(<span style=\"color:#a31515\">&quot;{0} failed. {1}&quot;</span>, assertionName, message));\r\n            exp.StackTraceFilter = a =&gt; !a.Contains(<span style=\"color:#a31515\">&quot;SoftwareApproach.TestingExtensions.&quot;</span>);\r\n            <span style=\"color:blue\">throw</span> exp;\r\n        }\r\n</pre>\r\n</div>\r\n<p></p>\r\n<p>And the Exception&nbsp;</p>\r\n<p></p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre><span style=\"color:blue\">public</span> <span style=\"color:blue\">class</span> AssertFailedMinialStackTraceException : AssertFailedException\r\n    {\r\n        <span style=\"color:blue\">public</span> AssertFailedMinialStackTraceException(<span style=\"color:blue\">string</span> msg, Exception ex)\r\n            : <span style=\"color:blue\">base</span>(msg, ex)\r\n        {\r\n        }\r\n\r\n        <span style=\"color:blue\">public</span> AssertFailedMinialStackTraceException(<span style=\"color:blue\">string</span> msg)\r\n            : <span style=\"color:blue\">base</span>(msg)\r\n        {\r\n        }\r\n\r\n        <span style=\"color:blue\">public</span> AssertFailedMinialStackTraceException()\r\n        {\r\n        }\r\n\r\n        <span style=\"color:blue\">protected</span> AssertFailedMinialStackTraceException(SerializationInfo info, StreamingContext context)\r\n            : <span style=\"color:blue\">base</span>(info, context)\r\n        {\r\n        }\r\n\r\n        <span style=\"color:blue\">public</span> Func&lt;String, <span style=\"color:blue\">bool</span>&gt; StackTraceFilter { <span style=\"color:blue\">get</span>; <span style=\"color:blue\">set</span>; }\r\n        <span style=\"color:blue\">private</span> <span style=\"color:blue\">string</span> filteredStackTrace;\r\n        <span style=\"color:blue\">public</span> <span style=\"color:blue\">override</span> <span style=\"color:blue\">string</span> StackTrace\r\n        {\r\n            <span style=\"color:blue\">get</span>\r\n            {\r\n                <span style=\"color:blue\">if</span> (filteredStackTrace != <span style=\"color:blue\">null</span>)\r\n                    <span style=\"color:blue\">return</span> filteredStackTrace;\r\n                <span style=\"color:blue\">var</span> before = <span style=\"color:blue\">base</span>.StackTrace;\r\n                <span style=\"color:blue\">var</span> parts = before.Split(<span style=\"color:#a31515\">'\\n'</span>);\r\n                <span style=\"color:blue\">var</span> filtered = parts\r\n                    .Where(a =&gt; !<span style=\"color:blue\">string</span>.IsNullOrEmpty(a))\r\n                    .Where(StackTraceFilter);\r\n                <span style=\"color:blue\">var</span> after = String.Join(<span style=\"color:#a31515\">&quot;\\r\\n&quot;</span>, filtered.ToArray());\r\n                filteredStackTrace = after;\r\n                <span style=\"color:blue\">return</span> filteredStackTrace;\r\n            }\r\n        }\r\n    }\r\n</pre>\r\n</div>\r\n<p></p>\r\n",
    "PostedDate": "2011-01-12T18:31:40.65-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]